<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Wodsoft.ComBoost.Wpf"
    xmlns:editor="clr-namespace:Wodsoft.ComBoost.Wpf.Editor"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
    <local:IsNullToBooleanValueConverter x:Key="IsNullToBooleanValueConverter1"/>
    <local:BooleanToVisibilityValueConverter x:Key="BooleanToVisibilityValueConverter"/>
    <local:IsNullToBooleanValueConverter x:Key="IsNullToBooleanValueConverter"/>
    <local:IntAddValueConverter x:Key="IntAddValueConverter"/>
    <local:IsNullToVisibilityValueConverter x:Key="IsNullToVisibilityValueConverter"/>
    <Style TargetType="{x:Type local:EntityViewer}">
        <Setter Property="Width" Value="800"/>
        <Setter Property="Height" Value="480"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:EntityViewer}">
                    <Grid Name="Layout" Background="White" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <TreeView Grid.RowSpan="2" Visibility="{Binding Model.Parent, ConverterParameter=false, Converter={StaticResource IsNullToVisibilityValueConverter}}" >
                            <TreeViewItem Header="全部" ItemsSource="{Binding Model.Parent}" Name="tree_all">
                                <TreeViewItem.ItemTemplate>
                                    <DataTemplate>
                                        <TreeViewItem Header="{Binding Name}" IsExpanded="{Binding Opened}" IsSelected="{Binding Selected}" ItemsSource="{Binding Items}" ItemTemplate="{Binding ItemTemplate,ElementName=tree_all}"/>
                                    </DataTemplate>
                                </TreeViewItem.ItemTemplate>
                            </TreeViewItem>
                        </TreeView>
                        <ListView Name="PART_ItemsView" Grid.Column="1" ItemsSource="{Binding Path=Model.Items}" SelectionMode="Single">
                            <ListView.View>
                                <GridView x:Name="PART_GridView">

                                </GridView>
                            </ListView.View>
                        </ListView>
                        <StackPanel Margin="10" Grid.Column="1" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Label Content="Items pre page" />
                            <ComboBox Name="size" ItemsSource="{Binding Path=Model.PageSizeOption}" SelectedItem="{Binding Path=Model.CurrentSize}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" MinWidth="48" IsReadOnly="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding ChangePageSizeCommand}" CommandParameter="{Binding SelectedItem ,ElementName=size}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10" Grid.Column="1" Grid.Row="1">
                            <ItemsControl ItemsSource="{Binding Model.ViewButtons}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button Command="{Binding Path=DataContext.EntityViewCommand, ElementName=Layout}" Width="64" CommandParameter="{Binding}">
                                            <StackPanel Orientation="Horizontal">
                                                <ContentControl Content="{Binding Icon}"/>
                                                <Label Content="{Binding Name}" />
                                            </StackPanel>
                                        </Button>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <ItemsControl ItemsSource="{Binding Model.ItemButtons}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button Command="{Binding Path=DataContext.EntityItemCommand, ElementName=Layout}" Width="64" CommandParameter="{Binding}" IsEnabled="{Binding SelectedItem, ElementName=PART_ItemsView, ConverterParameter=false, Converter={StaticResource IsNullToBooleanValueConverter}}">
                                            <StackPanel Orientation="Horizontal">
                                                <ContentControl Content="{Binding Icon}"/>
                                                <Label Content="{Binding Name}" />
                                            </StackPanel>
                                        </Button>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                        <StackPanel Margin="10" Grid.Column="1" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                            <Label Content="{Binding Path=Model.CurrentPage}"/>
                            <Label Content="/"/>
                            <Label Content="{Binding Path=Model.TotalPage}"/>
                            <Button Width="32" Content="&lt;&lt;" Command="{Binding NavigatePageCommand}" CommandParameter="1" />
                            <Button Width="32" Content="&lt;" Command="{Binding NavigatePageCommand}" CommandParameter="{Binding Model.CurrentPage, ConverterParameter=-1, Converter={StaticResource IntAddValueConverter}}" />
                            <Button Width="32" Content=">" Command="{Binding NavigatePageCommand}" CommandParameter="{Binding Model.CurrentPage, ConverterParameter=1, Converter={StaticResource IntAddValueConverter}}" />
                            <Button Width="32" Content=">>" Command="{Binding NavigatePageCommand}" CommandParameter="{Binding Model.TotalPage}" />
                        </StackPanel>
                        <Grid Name="PART_Loading" Grid.ColumnSpan="2" Grid.RowSpan="2" Background="#88000000" Visibility="{TemplateBinding IsLoading, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityValueConverter}}">
                            <ProgressBar Height="32" VerticalAlignment="Center" Margin="12" IsIndeterminate="True"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:EntityEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:EntityEditor}">
                    <Grid Background="White" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Name="layout">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <ItemsControl DataContext="{TemplateBinding Model}" ItemsSource="{Binding Path=Properties}" Name="EditorItems">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="10">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="100" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Label ToolTip="{Binding Description}" Content="{Binding Name}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                            <local:EditorPresenter Grid.Column="1" VerticalAlignment="Center" Editor="{Binding ElementName=layout, Path=DataContext}" Metadata="{Binding}" Entity="{Binding ElementName=EditorItems, Path=DataContext.Item}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button Name="PART_Save" Content="Save" Margin="10" Width="64" Height="24"/>
                            <Button Name="PART_Cancel" Content="Cancel" Margin="10" Width="64" Height="24"/>
                        </StackPanel>
                        <Grid Name="PART_Loading" Grid.RowSpan="2" Background="#88000000" Visibility="{TemplateBinding IsLoading, ConverterParameter=true, Converter={StaticResource BooleanToVisibilityValueConverter}}">
                            <ProgressBar VerticalAlignment="Center" Margin="12" IsIndeterminate="True"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:BooleanEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:BooleanEditor}">
                    <StackPanel Orientation="Horizontal">
                        <RadioButton Name="PART_True" GroupName="editor" Content="True" />
                        <RadioButton Name="PART_False" GroupName="editor" Content="False" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:DateEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:DateEditor}">
                    <DatePicker Name="PART_DatePicker"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:DateTimeEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:DateTimeEditor}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <DatePicker Name="PART_Date"/>
                        <TextBox Name="PART_Time">
                            <TextBox.InputScope>
                                <InputScope>
                                    <InputScope.Names>
                                        <InputScopeName NameValue="Time"/>
                                    </InputScope.Names>
                                </InputScope>
                            </TextBox.InputScope>
                        </TextBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:DefaultEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:DefaultEditor}">
                    <TextBox Name="PART_TextBox" Background="{TemplateBinding Background}"
                             VerticalContentAlignment="Center" ToolTip="{TemplateBinding ErrorMessage}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:EmailAddressEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:EmailAddressEditor}">
                    <TextBox Name="PART_TextBox" Background="{TemplateBinding Background}"
                             VerticalContentAlignment="Center" ToolTip="{TemplateBinding ErrorMessage}">
                        <TextBox.InputScope>
                            <InputScope>
                                <InputScope.Names>
                                    <InputScopeName NameValue="EmailSmtpAddress"/>
                                </InputScope.Names>
                            </InputScope>
                        </TextBox.InputScope>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:HtmlEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:HtmlEditor}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="80" />
                        </Grid.RowDefinitions>
                        <TextBox Name="PART_TextBox" Background="{TemplateBinding Background}"
                             VerticalContentAlignment="Center" ToolTip="{TemplateBinding ErrorMessage}"
                             Margin="0,0,0,8" AcceptsReturn="True" AcceptsTab="True"/>
                        <GridSplitter HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="8" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:SexEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:SexEditor}">
                    <StackPanel Orientation="Horizontal">
                        <RadioButton Name="PART_Male" GroupName="editor" Content="True" />
                        <RadioButton Name="PART_Female" GroupName="editor" Content="False" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:MultilineTextEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:MultilineTextEditor}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="80" />
                        </Grid.RowDefinitions>
                        <TextBox Name="PART_TextBox" Background="{TemplateBinding Background}"
                             VerticalContentAlignment="Center" ToolTip="{TemplateBinding ErrorMessage}"
                             Margin="0,0,0,8" AcceptsReturn="True" AcceptsTab="True"/>
                        <GridSplitter HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="8" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:CurrencyEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:CurrencyEditor}">
                    <TextBox Name="PART_TextBox" Background="{TemplateBinding Background}"
                             VerticalContentAlignment="Center" ToolTip="{TemplateBinding ErrorMessage}">
                        <TextBox.InputScope>
                            <InputScope>
                                <InputScope.Names>
                                    <InputScopeName NameValue="CurrencyAmount"/>
                                </InputScope.Names>
                            </InputScope>
                        </TextBox.InputScope>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:IntegerEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:IntegerEditor}">
                    <TextBox Name="PART_TextBox" Background="{TemplateBinding Background}"
                             VerticalContentAlignment="Center" ToolTip="{TemplateBinding ErrorMessage}">
                        <TextBox.InputScope>
                            <InputScope>
                                <InputScope.Names>
                                    <InputScopeName NameValue="Number"/>
                                </InputScope.Names>
                            </InputScope>
                        </TextBox.InputScope>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:NumberEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:NumberEditor}">
                    <TextBox Name="PART_TextBox" Background="{TemplateBinding Background}"
                             VerticalContentAlignment="Center" ToolTip="{TemplateBinding ErrorMessage}">
                        <TextBox.InputScope>
                            <InputScope>
                                <InputScope.Names>
                                    <InputScopeName NameValue="Number"/>
                                </InputScope.Names>
                            </InputScope>
                        </TextBox.InputScope>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:PasswordEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:PasswordEditor}">
                    <PasswordBox Name="PART_PasswordBox" Background="{TemplateBinding Background}"
                             VerticalContentAlignment="Center" ToolTip="{TemplateBinding ErrorMessage}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:TextEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:TextEditor}">
                    <TextBox Name="PART_TextBox" Background="{TemplateBinding Background}"
                             VerticalContentAlignment="Center" ToolTip="{TemplateBinding ErrorMessage}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:PhoneNumberEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:PhoneNumberEditor}">
                    <TextBox Name="PART_TextBox" Background="{TemplateBinding Background}"
                             VerticalContentAlignment="Center" ToolTip="{TemplateBinding ErrorMessage}">
                        <TextBox.InputScope>
                            <InputScope>
                                <InputScope.Names>
                                    <InputScopeName NameValue="TelephoneNumber"/>
                                </InputScope.Names>
                            </InputScope>
                        </TextBox.InputScope>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:UrlEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:UrlEditor}">
                    <TextBox Name="PART_TextBox" Background="{TemplateBinding Background}"
                             VerticalContentAlignment="Center" ToolTip="{TemplateBinding ErrorMessage}">
                        <TextBox.InputScope>
                            <InputScope>
                                <InputScope.Names>
                                    <InputScopeName NameValue="Url"/>
                                </InputScope.Names>
                            </InputScope>
                        </TextBox.InputScope>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:TimeEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:TimeEditor}">
                    <TextBox Name="PART_TextBox" Background="{TemplateBinding Background}"
                             VerticalContentAlignment="Center" ToolTip="{TemplateBinding ErrorMessage}">
                        <TextBox.InputScope>
                            <InputScope>
                                <InputScope.Names>
                                    <InputScopeName NameValue="Time"/>
                                </InputScope.Names>
                            </InputScope>
                        </TextBox.InputScope>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:ImageUrlEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:ImageUrlEditor}">
                    <TextBox Name="PART_TextBox" Background="{TemplateBinding Background}"
                             VerticalContentAlignment="Center" ToolTip="{TemplateBinding ErrorMessage}">
                        <TextBox.InputScope>
                            <InputScope>
                                <InputScope.Names>
                                    <InputScopeName NameValue="Url"/>
                                </InputScope.Names>
                            </InputScope>
                        </TextBox.InputScope>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:EntityEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:EntityEditor}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Name="PART_TextBox" Background="{TemplateBinding Background}" IsReadOnly="True"
                             VerticalContentAlignment="Center" ToolTip="{TemplateBinding ErrorMessage}"/>
                        <Button Grid.Column="1" Content="Select" Command="{TemplateBinding SelectCommand}" />
                        <Button Grid.Column="2" Content="Clear" Command="{TemplateBinding ClearCommand}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type editor:CollectionEditor}">
        <Style.Triggers>
            <Trigger Property="HasError" Value="True">
                <Setter Property="Background" Value="#FFBBBB" />
            </Trigger>
            <Trigger Property="HasError" Value="False">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Height" Value="144"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:CollectionEditor}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="64"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <ListBox Name="PART_Selector" SelectionMode="Multiple" ItemsSource="{TemplateBinding CurrentValue}" Grid.RowSpan="3" Background="{TemplateBinding Background}" ToolTip="{TemplateBinding ErrorMessage}"/>
                        <Button Name="PART_Add" Grid.Column="1" Content="Add" />
                        <Button Name="PART_Remove" Grid.Column="1" Grid.Row="2" Content="Remove" />
                        <Button Name="PART_Clear" Grid.Column="1" Grid.Row="3" Content="Clear" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
